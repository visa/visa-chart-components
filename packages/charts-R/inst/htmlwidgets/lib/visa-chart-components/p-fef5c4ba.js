/**
 * Copyright (c) 2024 Visa, Inc.
 *
 * This source code is licensed under the MIT license
 * https://github.com/visa/visa-chart-components/blob/master/LICENSE
 *
 **/
function t(t){return function(){return t}}const i=Math.PI,h=2*i,s=1e-6,r=h-s;function $(t){this._+=t[0];for(let i=1,h=t.length;i<h;++i)this._+=arguments[i]+t[i]}class n{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=null==t?$:function(t){let i=Math.floor(t);if(!(i>=0))throw new Error(`invalid digits: ${t}`);if(i>15)return $;const h=10**i;return function(t){this._+=t[0];for(let i=1,s=t.length;i<s;++i)this._+=Math.round(arguments[i]*h)/h+t[i]}}(t)}moveTo(t,i){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+i}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,i){this._append`L${this._x1=+t},${this._y1=+i}`}quadraticCurveTo(t,i,h,s){this._append`Q${+t},${+i},${this._x1=+h},${this._y1=+s}`}bezierCurveTo(t,i,h,s,r,$){this._append`C${+t},${+i},${+h},${+s},${this._x1=+r},${this._y1=+$}`}arcTo(t,h,r,$,n){if(t=+t,h=+h,r=+r,$=+$,(n=+n)<0)throw new Error(`negative radius: ${n}`);let e=this._x1,a=this._y1,o=r-t,l=$-h,u=e-t,c=a-h,f=u*u+c*c;if(null===this._x1)this._append`M${this._x1=t},${this._y1=h}`;else if(f>s)if(Math.abs(c*o-l*u)>s&&n){let M=r-e,w=$-a,v=o*o+l*l,d=M*M+w*w,g=Math.sqrt(v),A=Math.sqrt(f),T=n*Math.tan((i-Math.acos((v+f-d)/(2*g*A)))/2),E=T/A,L=T/g;Math.abs(E-1)>s&&this._append`L${t+E*u},${h+E*c}`,this._append`A${n},${n},0,0,${+(c*M>u*w)},${this._x1=t+L*o},${this._y1=h+L*l}`}else this._append`L${this._x1=t},${this._y1=h}`}arc(t,$,n,e,a,o){if(t=+t,$=+$,o=!!o,(n=+n)<0)throw new Error(`negative radius: ${n}`);let l=n*Math.cos(e),u=n*Math.sin(e),c=t+l,f=$+u,M=1^o,w=o?e-a:a-e;null===this._x1?this._append`M${c},${f}`:(Math.abs(this._x1-c)>s||Math.abs(this._y1-f)>s)&&this._append`L${c},${f}`,n&&(w<0&&(w=w%h+h),w>r?this._append`A${n},${n},0,1,${M},${t-l},${$-u}A${n},${n},0,1,${M},${this._x1=c},${this._y1=f}`:w>s&&this._append`A${n},${n},0,${+(w>=i)},${M},${this._x1=t+n*Math.cos(a)},${this._y1=$+n*Math.sin(a)}`)}rect(t,i,h,s){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+i}h${h=+h}v${+s}h${-h}Z`}toString(){return this._}}function e(t){let i=3;return t.digits=function(h){if(!arguments.length)return i;if(null==h)i=null;else{const t=Math.floor(h);if(!(t>=0))throw new RangeError(`invalid digits: ${h}`);i=t}return t},()=>new n(i)}var a=Array.prototype.slice;function o(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}export{o as a,t as c,a as s,e as w}